---
import { Picture } from 'astro:assets';
import type { ImageMetadata } from 'astro';

interface Props {
  imageSource: ImageMetadata;
  imageAlt: string;
  headline: string;
  body: string;
}

const { imageSource, imageAlt, headline, body } = Astro.props;
---

<section>
  <div class="image-container">
    <Picture src={imageSource} alt={imageAlt} widths={[615, 923, 1230]} />
  </div>
  <div id="hero-content-container" class="content-container">
    <h1 id="hero-h1" set:html={headline} />
    {body.split('<br /><br />').map((text) => <p set:html={text} />)}
  </div>
</section>

<style>
  section {
    position: relative;
    padding-top: 3.875rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-inline: auto;
    width: 100%;
    max-width: calc(var(--max-width) + var(--content-border) * 2);
    text-align: center;
    overflow: hidden;
  }

  section::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: radial-gradient(var(--color-blue-900), var(--color-black));
    z-index: -1;
  }

  section > * {
    max-width: 25.375rem;
    width: 100%;
  }

  .image-container {
    position: relative;
    margin-top: 1rem;
    margin-left: var(--content-border);
  }

  .image-container::before {
    content: '';
    display: inline-block;
    position: absolute;
    width: calc(var(--max-width) * 0.625);
    height: calc(var(--max-width) * 0.625);
    border-radius: 50%;
    right: -6.125rem;
    top: calc(var(--img-padding-top, 8rem) - 5rem);
    background: radial-gradient(var(--color-gray-100), var(--color-blue-700));
    z-index: -1;
  }

  .content-container {
    margin-right: var(--content-border);
  }

  img {
    padding-top: var(--img-padding-top, 8rem);
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: bottom;
    display: block;
  }

  @media screen and (max-width: 870px) {
    section {
      flex-direction: column;
    }

    .image-container,
    .content-container {
      margin-inline: 0;
    }
    .content-container {
      background: linear-gradient(180deg, var(--color-gray-900) 0%, var(--color-black) 100%);
      padding: 2.5rem 15rem 1rem;
      margin-inline: var(--content-border);
    }

    section > * {
      width: calc(100% - var(--content-border) * 2 - 1.1875rem * 2);
    }

    .image-container::before {
      right: unset;
      transform: translateX(-50%);
    }
  }
</style>

<style is:global>
  #hero-content-container h1 {
    margin-bottom: var(--h1-margin-bottom, 2.1rem);
  }

  #hero-content-container p {
    margin-bottom: var(--p-margin-bottom, 0.7rem);
  }

  #hero-content-container p:last-of-type {
    margin-bottom: 0;
  }
</style>
